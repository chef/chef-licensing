interactions:
  start:
    messages: |
      -----------------------------------------------------
                   Provide Your License ID

        To access premium content and other special features,
        you will need a Chef License ID.

        If you already have one, you can enter it at the prompt
        on the following screen.

        If you need to get an evaluation or personal use license
        ID, you can get one by providing your details.
      -------------------------------------------------------
    prompt_type: "say"
    paths: [ask_if_user_has_license_id]

  ask_if_user_has_license_id:
    messages: "Do you have a Chef License ID?"
    prompt_type: "timeout_yes"
    prompt_attributes:
      timeout_duration: 60
      timeout_message: "\nPrompt timed out. Use non-interactive flags or enter an answer within 60 seconds."
    paths: [ask_for_license_id, ask_for_license_generation]
    response_path_map:
      "true": ask_for_license_id
      "false": ask_for_license_generation

  ask_for_license_id:
    messages: "Please input your License ID: "
    prompt_type: "ask"
    paths: [validate_license_id_pattern]

  validate_license_id_pattern:
    action: is_license_with_valid_pattern?
    paths: [validate_license_id_with_api, ask_for_license_id]
    response_path_map:
      "true": validate_license_id_with_api
      "false": ask_for_license_id
    description: "is_license_with_valid_pattern? is a method defined in TUIActions class"

  validate_license_id_with_api:
    action: is_license_valid_on_server?
    paths: [validation_success, validation_failure]
    response_path_map:
      "true": validation_success
      "false": validation_failure
    description: "is_license_valid_on_server? is a method defined in TUIActions class"

  validation_success:
    messages: "License validated successfully."
    paths: [fetch_license_id]

  validation_failure:
    messages: "License is not valid. Please try again."
    paths: [ask_for_license_id]

  ask_for_license_generation:
    messages: "Would you like to generate license?"
    prompt_type: "yes"
    paths: [info_of_license_types, license_generation_skipped]
    response_path_map:
      "true": info_of_license_types
      "false": license_generation_skipped

  license_generation_skipped:
    messages: |
      License generation skipped!

      License is required to in order to use inspec

      Visit <link> to know more about the licenses
    paths: [exit]

  info_of_license_types:
    messages: |
      Thank you for taking interest in inspec.

      We have following types of licenses
      Please choose the one that suits your requirements


      1.Free license
        Validity : # Days
        Entitlement :
        No. of nodes : ##
        Free features : Yes
        Premium features : No


      2.Trial License
        Validity : # Days
        Entitlement :
        No. of nodes : ##
        Free features : Yes
        Premium features : No


      3.Commercial License
        Validity : # Days
        Entitlement :
        No. of nodes : ##
        Free features : Yes
        Premium features : No


      To know more about license types, their respective entitlement and premium features, Visit
      <link>"
    prompt_type: "say"
    paths: [ask_for_license_type]

  ask_for_license_type:
    prompt_type: "select"
    messages: ["" , [ "1.Free license", "2.Trial license", "3.Commercial license"]]
    paths: [free_license_selection, commercial_license_selection, trial_license_selection]
    response_path_map:
      "1.Free license": free_license_selection
      "2.Trial license": trial_license_selection
      "3.Commercial license": commercial_license_selection

  free_license_selection:
    messages: |
      You have selected
      Free License
        Validity : x Days
        Entitlement :
          No. of nodes : X
          Free features : Yes
          Premium features : No
    prompt_type: "say"
    paths: [license_type_confirmation]

  trial_license_selection:
    messages: |
      You have selected
      Trial License
        Validity : x Days
        Entitlement :
          No. of nodes : X
          Free features : Yes
          Premium features : No
    prompt_type: "say"
    paths: [license_type_confirmation]

  commercial_license_selection:
    messages: |
      You have selected
      Commercial license
        Validity : x Days
        Entitlement :
          No. of nodes : X
          Free features : Yes
          Premium features : No
    prompt_type: "say"
    paths: [license_type_confirmation]

  license_type_confirmation:
    prompt_type: "select"
    messages: ["Please select", ["Confirm", "Choose again", "Quit"]]
    paths: [gather_user_first_name_for_license_generation, info_of_license_types, exit]
    response_path_map:
      "Confirm": gather_user_first_name_for_license_generation
      "Choose again": info_of_license_types
      "Quit": exit

  gather_user_first_name_for_license_generation:
    messages: "Enter First name"
    prompt_type: "ask"
    paths: [validate_user_first_name_for_license_generation]

  validate_user_first_name_for_license_generation:
    action: is_user_name_valid?
    paths: [gather_user_last_name_for_license_generation, user_first_name_validation_failure]
    response_path_map:
      "true": gather_user_last_name_for_license_generation
      "false": user_first_name_validation_failure

  user_first_name_validation_failure:
    messages: "Invalid name. It should contain only A-Z/a-z alphabets and _ , - or ` special characters."
    prompt_type: "error"
    paths: [gather_user_first_name_for_license_generation]

  gather_user_last_name_for_license_generation:
    messages: "Enter last name"
    prompt_type: "ask"
    paths: [validate_user_last_name_for_license_generation]

  validate_user_last_name_for_license_generation:
    action: is_user_name_valid?
    paths: [gather_user_email_for_license_generation, user_last_name_validation_failure]
    response_path_map:
      "true": gather_user_email_for_license_generation
      "false": user_last_name_validation_failure

  user_last_name_validation_failure:
    messages: "Invalid name. It should contain only A-Z/a-z alphabets and _ , - or ` special characters."
    prompt_type: "error"
    paths: [gather_user_last_name_for_license_generation]

  gather_user_email_for_license_generation:
    messages: "Enter Email address"
    prompt_type: "ask"
    paths: [validate_user_email_for_license_generation]

  validate_user_email_for_license_generation:
    action: is_email_valid?
    paths: [gather_user_company_for_license_generation, user_email_validation_failure]
    response_path_map:
      "true": gather_user_company_for_license_generation
      "false": user_email_validation_failure

  user_email_validation_failure:
    messages: "Invalid email address."
    prompt_type: "error"
    paths: [gather_user_email_for_license_generation]

  gather_user_company_for_license_generation:
    messages: "Enter Company Name"
    prompt_type: "ask"
    paths: [validate_user_company_name_for_license_generation]

  validate_user_company_name_for_license_generation:
    action: is_company_name_valid?
    paths: [gather_user_phone_no_for_license_generation, user_company_name_validation_failure]
    response_path_map:
      "true": gather_user_phone_no_for_license_generation
      "false": user_company_name_validation_failure

  user_company_name_validation_failure:
    messages: "Invalid company name. It should contain only A-Z/a-z alphabets and _ , . , - or ` special characters."
    prompt_type: "error"
    paths: [gather_user_company_for_license_generation]

  gather_user_phone_no_for_license_generation:
    messages: "Enter Phone number"
    prompt_type: "ask"
    paths: [validate_user_phone_no]

  validate_user_phone_no:
    action: is_phone_no_valid?
    paths: [print_to_review_details, user_phone_no_validation_failure]
    response_path_map:
      "true": print_to_review_details
      "false": user_phone_no_validation_failure

  user_phone_no_validation_failure:
    messages: "Please enter valid phone no."
    prompt_type: "error"
    paths: [gather_user_phone_no_for_license_generation]

  print_to_review_details:
    action: print_review_details
    paths: [ask_for_review_confirmation]

  ask_for_review_confirmation:
    prompt_type: "select"
    messages: ["Please select", ["Confirm the details and proceed", "Re-enter the details"]]
    paths: [pre_license_generation, info_of_license_types]
    response_path_map:
      "Confirm the details and proceed": pre_license_generation
      "Re-enter the details": info_of_license_types

  pre_license_generation:
    action: select_license_generation_based_on_type
    paths: [generate_free_license, generate_trial_license, generate_commercial_license]
    response_path_map:
      "free": generate_free_license
      "trial": generate_trial_license
      "commercial": generate_commercial_license

  generate_free_license:
    action: generate_free_license
    paths: [free_license_generation_success, license_generation_failure]
    response_path_map:
      "true": free_license_generation_success
      "false": license_generation_failure

  generate_trial_license:
    action: generate_trial_license
    paths: [trial_license_generation_success, license_generation_failure]
    response_path_map:
      "true": trial_license_generation_success
      "false": license_generation_failure

  generate_commercial_license:
    action: generate_commercial_license_lead
    paths: [commercial_license_generation_success, license_generation_failure]
    response_path_map:
      "true": commercial_license_generation_success
      "false": license_generation_failure

  free_license_generation_success:
    messages: |
      The license has been generated and registered.

      A copy has also been sent on your email.

      You can also look up it in saleforce portal under the name of <%= input[:gather_user_first_name_for_license_generation] + " " + input[:gather_user_last_name_for_license_generation] %>
      f you do not know your license key you can log into your Progress Chef customer portal to obtain your product serial number
    paths: [fetch_license_id]

  trial_license_generation_success:
    messages: |
      The license has been generated and registered.
      A copy has also been sent on <%= input[:gather_user_email_for_license_generation] %>.
      You can also look up it in saleforce portal under the name of <%= input[:gather_user_first_name_for_license_generation] + " " + input[:gather_user_last_name_for_license_generation] %>
    paths: [fetch_license_id]

  commercial_license_generation_success:
    messages: "Our Sales team will get in touch with you with further steps."
    paths: [exit]

  fetch_license_id:
    action: fetch_license_id
    paths: [exit]

  license_generation_failure:
    action: license_generation_rejected?
    paths: [fetch_license_failure_error_msg, fetch_license_failure_rejection_msg]
    response_path_map:
      "true": fetch_license_failure_rejection_msg
      "false": fetch_license_failure_error_msg

  fetch_license_failure_error_msg:
    action: fetch_license_failure_error_msg
    paths: [license_generation_with_errors]

  fetch_license_failure_rejection_msg:
    action: fetch_license_failure_rejection_msg
    paths: [license_generation_rejected]

  license_generation_rejected:
    messages: ["Your request for a license was denied for the following reason <%= input[:fetch_license_failure_rejection_msg] %>. Please select an Option", ["Try again", "Continue using non-premium features"]]
    prompt_type: "select"
    paths: [pre_license_generation, exit]
    response_path_map:
      "Try again": pre_license_generation
      "Continue using non-premium features": exit

  license_generation_with_errors:
    messages: ["An error occurred while generating your license. Error message: <%= input[:fetch_license_failure_error_msg] %>", ["Try again", "Continue using non-premium features"]]
    prompt_type: "select"
    paths: [pre_license_generation, exit]
    response_path_map:
      "Try again": pre_license_generation
      "Continue using non-premium features": exit

  exit:
    messages: "Thank you."
