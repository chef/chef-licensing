:file_format_version: 1.0.0

interactions:
  start:
    messages: |
      ------------------------------------------------------------
        License ID Validation

        To continue using Chef <%= input[:chef_product_name] %>, a license ID is required.
        (Free, Trial, or Commercial)

        If you generated a license previously, you might
        have received it in an email.

        If you are a commercial user, you can also find it in the
        <%= input[:pastel].underline.green("supportlink.chef.io")%> portal.
      ------------------------------------------------------------
    prompt_type: "say"
    paths: [ask_if_user_has_license_id]

  add_license_all:
    messages: ""
    prompt_type: "silent"
    paths: [ask_if_user_has_license_id]

  prompt_license_addition_restriction:
    action: set_license_info
    paths: [prompt_error_license_addition_restricted]

  prompt_error_license_addition_restricted:
    messages: "✖ [Error] License validation failed.\n"
    prompt_type: "error"
    paths: [license_restriction_header_text]

  license_restriction_header_text:
    action: determine_restriction_type
    paths: [trial_already_exist_message, free_license_already_exist_message, active_trial_exist_message]
    response_path_map:
      "trial_restriction": trial_already_exist_message
      "free_restriction": free_license_already_exist_message
      "active_trial_restriction": active_trial_exist_message

  trial_already_exist_message:
    messages: "A Trial License already exists with following details: \n"
    prompt_type: "say"
    paths: [add_license_info_in_restriction_flow]

  free_license_already_exist_message:
    messages: "A Free License already exists with following details: \n"
    prompt_type: "say"
    paths: [add_license_info_in_restriction_flow]

  active_trial_exist_message:
    messages: "An active Trial License already exists with following details \n"
    prompt_type: "say"
    paths: [add_license_info_in_restriction_flow]

  add_license_info_in_restriction_flow:
    action: display_license_info
    paths: [license_restriction_foot_text]

  license_restriction_foot_text:
    action: fetch_license_type_restricted
    paths: [trial_restriction_message, free_restriction_message, only_commercial_allowed_message]
    response_path_map:
      "trial": trial_restriction_message
      "free": free_restriction_message
      "trial_and_free": only_commercial_allowed_message

  trial_restriction_message:
    prompt_type: "say"
    messages:
      Please generate a Free or Commercial License by running <%= input[:pastel].bold("#{ChefLicensing::Config.chef_executable_name} license add")%>.
    paths: [exit]

  free_restriction_message:
    prompt_type: "say"
    messages:
      Please generate a Trial or Commercial License by running <%= input[:pastel].bold("#{ChefLicensing::Config.chef_executable_name} license add")%>.
    paths: [exit]

  only_commercial_allowed_message:
    prompt_type: "say"
    messages:
      Please generate a Commercial License by running <%= input[:pastel].bold("#{ChefLicensing::Config.chef_executable_name} license add")%>.
    paths: [exit]

  prompt_license_expired:
    messages: |
      ------------------------------------------------------------
        <%= input[:pastel].yellow("! [WARNING]")%> <%= input[:license_type] %> License Expired

        Get a Commercial License to receive bug fixes, updates
        and new features.
        Get a Free License to scan limited targets.

        To get a new license, run <%= input[:pastel].bold("#{ChefLicensing::Config.chef_executable_name} license add")%>
        and select a license type.
      ------------------------------------------------------------
    prompt_type: "say"
    paths: [fetch_license_id]

  prompt_license_about_to_expire:
    messages: |
      ------------------------------------------------------------
        <%= input[:pastel].yellow("! [WARNING]")%> Your license is about to expire in <%= input[:pastel].bold(input[:number_of_days_in_expiration]) %> <%= input[:pastel].bold("days.") %>

        To avoid service disruptions, get a Commercial License
        before <%= input[:license_expiration_date] %>.
      ------------------------------------------------------------
    prompt_type: "say"
    paths: [fetch_license_id]

  ask_if_user_has_license_id:
    messages: ["\nPlease choose one of the options below",["I already have a license ID", "I don't have a license ID and would like to generate a new license ID", "Skip"]]
    prompt_type: "timeout_select"
    prompt_attributes:
      timeout_duration: 60
      timeout_message: "\nPrompt timed out. Use non-interactive flags or enter an answer within 60 seconds."
    paths: [ask_for_license_id, info_of_license_types, skipped]
    response_path_map:
      "I already have a license ID": ask_for_license_id
      "I don't have a license ID and would like to generate a new license ID": info_of_license_types
      "Skip": skipped

  skipped:
    messages: "License ID validation skipped!"
    paths: [exit]

  ask_for_license_id:
    messages: "Please enter your license ID: "
    prompt_type: "ask"
    paths: [validate_license_id_pattern]

  validate_license_id_pattern:
    action: is_license_with_valid_pattern?
    paths: [validate_license_id_with_api, ask_for_license_id]
    response_path_map:
      "true": validate_license_id_with_api
      "false": ask_for_license_id
    description: "is_license_with_valid_pattern? is a method defined in TUIActions class"

  validate_license_id_with_api:
    action: is_license_valid_on_server?
    paths: [validate_license_restriction, fetch_invalid_license_msg]
    response_path_map:
      "true": validate_license_restriction
      "false": fetch_invalid_license_msg
    description: "is_license_valid_on_server? is a method defined in TUIActions class"

  validate_license_restriction:
    action: is_license_allowed?
    paths: [validate_license_expiration, prompt_error_license_addition_restricted]
    response_path_map:
      "true": validate_license_expiration
      "false": prompt_error_license_addition_restricted

  validate_license_expiration:
    action: license_expiration_status?
    paths: [validation_success, prompt_license_about_to_expire, prompt_license_expired]
    response_path_map:
      "active": validation_success
      "about_to_expire": prompt_license_about_to_expire
      "expired": prompt_license_expired

  validation_success:
    messages: "✔ [Success] License validated successfully."
    prompt_type: "ok"
    paths: [display_license_info]

  display_license_info:
    action: display_license_info
    paths: [fetch_license_id]

  fetch_invalid_license_msg:
    action: fetch_invalid_license_msg
    paths: [validation_failure]

  validation_failure:
    messages: "✖ [Error] License validation failed: <%= input[:fetch_invalid_license_msg] %>."
    prompt_type: "error"
    paths: [retry_message]

  retry_message:
    messages: "Please try again."
    paths: [ask_for_license_id]


  license_generation_skipped:
    messages: |
      License generation skipped!

      A license is required to use <%= input[:chef_product_name] %>.

      Visit <link> to learn more about the licenses.
    paths: [exit]

  info_of_license_types:
    messages: |
      Thank you for taking interest in <%= input[:chef_product_name] %>.

      We have the following types of licenses.
    prompt_type: "say"
    paths: [filter_license_type_options]

  filter_license_type_options:
    action: filter_license_type_options
    paths: [ask_for_all_license_type, ask_for_license_except_trial, ask_for_commercial_only, ask_for_license_except_free]
    response_path_map:
      "ask_for_all_license_type": ask_for_all_license_type
      "ask_for_license_except_trial": ask_for_license_except_trial
      "ask_for_commercial_only": ask_for_commercial_only
      "ask_for_license_except_free": ask_for_license_except_free

  ask_for_commercial_only:
    prompt_type: "select"
    messages: ["Select the type of license below and then enter user details\n" ,
      [
      "1. Commercial License\n",
      "2. Quit license generation."
      ]]
    paths: [commercial_license_selection, exit]
    response_path_map:
      "1. Commercial License\n": commercial_license_selection
      "2. Quit license generation": exit

  ask_for_license_except_trial:
    prompt_type: "select"
    messages: ["Select the type of license below and then enter user details\n" ,
      [
      "1. Free License\n     Validity: Unlimited\n     No. of targets: 10\n",
      "2. Commercial License\n",
      "3. Quit license generation"
      ]]
    paths: [free_license_disclaimer, commercial_license_selection, exit]
    response_path_map:
      "1. Free License\n     Validity: Unlimited\n     No. of targets: 10\n": free_license_disclaimer
      "2. Commercial License\n": commercial_license_selection
      "3. Quit license generation": exit

  ask_for_license_except_free:
    prompt_type: "select"
    messages: ["Select the type of license below and then enter user details\n" ,
      [
      "1. Trial License\n     Validity: 30 Days\n     No. of targets: Unlimited\n",
      "2. Commercial License\n",
      "3. Quit license generation"
      ]]
    paths: [trial_license_selection, commercial_license_selection, exit]
    response_path_map:
      "1. Trial License\n     Validity: 30 Days\n     No. of targets: Unlimited\n": trial_license_selection
      "2. Commercial License\n": commercial_license_selection
      "3. Quit license generation": exit

  ask_for_all_license_type:
    prompt_type: "select"
    messages: ["Select the type of license below and then enter user details\n" ,
      [
      "1. Free License\n     Validity: Unlimited\n     No. of targets: 10\n",
      "2. Trial License\n     Validity: 30 Days\n     No. of targets: Unlimited\n",
      "3. Commercial License\n",
      "4. Quit license generation"
      ]]
    paths: [free_license_disclaimer, commercial_license_selection, trial_license_selection, exit]
    response_path_map:
      "1. Free License\n     Validity: Unlimited\n     No. of targets: 10\n": free_license_disclaimer
      "2. Trial License\n     Validity: 30 Days\n     No. of targets: Unlimited\n": trial_license_selection
      "3. Commercial License\n": commercial_license_selection
      "4. Quit license generation": exit

  free_license_disclaimer:
    messages: '<%= input[:pastel].bold("A Free License can be used for personal, non-commercial use only.\n")%>'
    prompt_type: "warn"
    paths: [free_license_selection]

  free_license_selection:
    messages: "Type: Free License\n  Validity: Unlimited\n  No. of targets: 10\n"
    prompt_type: "silent"
    paths: [check_if_user_details_are_present]

  trial_license_selection:
    messages: "Type: Trial License\n  Validity: 30 days\n  No. of targets: Unlimited\n"
    prompt_type: "silent"
    paths: [check_if_user_details_are_present]

  commercial_license_selection:
    messages: ["Get in touch with the Sales Team by filling out the form available at <%= input[:pastel].blue.underline.blue(\"https://www.chef.io/contact-us\") %>\n",
      [Quit]
    ]
    prompt_type: "select"
    paths: [exit]

  check_if_user_details_are_present:
    action: are_user_details_present?
    paths: [ask_for_user_details, print_to_review_details]
    response_path_map:
      "true": "print_to_review_details"
      "false": "ask_for_user_details"

  ask_for_user_details:
    messages: |
      Please enter the following details:
      First Name, Last Name, Email, Company, Phone

    paths: [gather_user_first_name_for_license_generation]

  gather_user_first_name_for_license_generation:
    messages: "Enter First Name: "
    prompt_type: "ask"
    paths: [validate_user_first_name_for_license_generation]

  validate_user_first_name_for_license_generation:
    action: is_user_name_valid?
    paths: [gather_user_last_name_for_license_generation, user_first_name_validation_failure]
    response_path_map:
      "true": gather_user_last_name_for_license_generation
      "false": user_first_name_validation_failure

  user_first_name_validation_failure:
    messages: "Invalid name. It should contain only A-Z/a-z alphabets."
    prompt_type: "error"
    paths: [gather_user_first_name_for_license_generation]

  gather_user_last_name_for_license_generation:
    messages: "Enter Last Name: "
    prompt_type: "ask"
    paths: [validate_user_last_name_for_license_generation]

  validate_user_last_name_for_license_generation:
    action: is_user_name_valid?
    paths: [gather_user_email_for_license_generation, user_last_name_validation_failure]
    response_path_map:
      "true": gather_user_email_for_license_generation
      "false": user_last_name_validation_failure

  user_last_name_validation_failure:
    messages: "Invalid name. It should contain only A-Z/a-z alphabets."
    prompt_type: "error"
    paths: [gather_user_last_name_for_license_generation]

  gather_user_email_for_license_generation:
    messages: "Enter Email Address: "
    prompt_type: "ask"
    paths: [validate_user_email_for_license_generation]

  validate_user_email_for_license_generation:
    action: is_email_valid?
    paths: [gather_user_company_for_license_generation, user_email_validation_failure]
    response_path_map:
      "true": gather_user_company_for_license_generation
      "false": user_email_validation_failure

  user_email_validation_failure:
    messages: "Invalid email address."
    prompt_type: "error"
    paths: [gather_user_email_for_license_generation]

  gather_user_company_for_license_generation:
    messages: "Enter Company Name: "
    prompt_type: "ask"
    paths: [validate_user_company_name_for_license_generation]

  validate_user_company_name_for_license_generation:
    action: is_company_name_valid?
    paths: [gather_user_phone_no_for_license_generation, user_company_name_validation_failure]
    response_path_map:
      "true": gather_user_phone_no_for_license_generation
      "false": user_company_name_validation_failure

  user_company_name_validation_failure:
    messages: "Invalid company name. It should contain only A-Z/a-z alphabets, numbers or special characters."
    prompt_type: "error"
    paths: [gather_user_company_for_license_generation]

  gather_user_phone_no_for_license_generation:
    messages: "Enter phone number: "
    prompt_type: "ask"
    paths: [validate_user_phone_no]

  validate_user_phone_no:
    action: is_phone_no_valid?
    paths: [print_to_review_details, user_phone_no_validation_failure]
    response_path_map:
      "true": print_to_review_details
      "false": user_phone_no_validation_failure

  user_phone_no_validation_failure:
    messages: "Please enter a valid phone number."
    prompt_type: "error"
    paths: [gather_user_phone_no_for_license_generation]

  print_to_review_details:
    messages: |
      ------------------------------------------------------------
      Review the details below and confirm to proceed.
      ------------------------------------------------------------
      License Details

        <%= input[:free_license_selection] || input[:trial_license_selection] %>
      User Details

        First Name: <%= input[:gather_user_first_name_for_license_generation] %>
        Last Name: <%= input[:gather_user_last_name_for_license_generation] %>
        Email: <%= input[:gather_user_email_for_license_generation] %>
        Company: <%= input[:gather_user_company_for_license_generation] %>
        Phone number: <%= input[:gather_user_phone_no_for_license_generation] %>
      ------------------------------------------------------------
    prompt_type: "say"
    paths: [ask_for_review_confirmation]

  ask_for_review_confirmation:
    prompt_type: "select"
    messages: ["Please select", ["Confirm the details and proceed", "Reselect the license type", "Edit user details", "Quit the license generation process"]]
    paths: [pre_license_generation, clear_current_license_type_selection, ask_for_user_details, exit]
    response_path_map:
      "Confirm the details and proceed": pre_license_generation
      "Reselect the license type": clear_current_license_type_selection
      "Edit user details": ask_for_user_details
      "Quit the license generation process": exit

  clear_current_license_type_selection:
    action: clear_license_type_selection
    paths: [info_of_license_types]

  pre_license_generation:
    action: select_license_generation_based_on_type
    paths: [generate_free_license, generate_trial_license]
    response_path_map:
      "free": generate_free_license
      "trial": generate_trial_license

  generate_free_license:
    action: generate_free_license
    paths: [free_license_generation_success, license_generation_failure]
    response_path_map:
      "true": free_license_generation_success
      "false": license_generation_failure

  generate_trial_license:
    action: generate_trial_license
    paths: [trial_license_generation_success, license_generation_failure]
    response_path_map:
      "true": trial_license_generation_success
      "false": license_generation_failure

  free_license_generation_success:
    messages: |
      <%= input[:pastel].green("✔ [Success] License generated successfully") %>

      The license ID has been sent to <%= input[:gather_user_email_for_license_generation] %>.
    paths: [ask_for_license_id]

  trial_license_generation_success:
    messages: |
      <%= input[:pastel].green("✔ [Success] License generated successfully") %>

      The license ID has been sent to <%= input[:gather_user_email_for_license_generation] %>.
    paths: [ask_for_license_id]

  fetch_license_id:
    action: fetch_license_id
    paths: [exit]

  license_generation_failure:
    messages: "✖ [Error] License generation failed."
    prompt_type: "error"
    paths: [check_failure_reason]

  check_failure_reason:
    action: license_generation_rejected?
    paths: [fetch_license_failure_error_msg, fetch_license_failure_rejection_msg]
    response_path_map:
      "true": fetch_license_failure_rejection_msg
      "false": fetch_license_failure_error_msg

  fetch_license_failure_error_msg:
    action: fetch_license_failure_error_msg
    paths: [license_generation_with_errors]

  fetch_license_failure_rejection_msg:
    action: fetch_license_failure_rejection_msg
    paths: [license_generation_rejected]

  license_generation_rejected:
    messages: ["Your request for a license was denied for the following reason: <%= input[:fetch_license_failure_rejection_msg] %>. Please select one of the following options:", ["Try again", "Skip"]]
    prompt_type: "select"
    paths: [pre_license_generation, skipped]
    response_path_map:
      "Try again": pre_license_generation
      "Skip": skipped

  license_generation_with_errors:
    messages: ["\nAn error occurred while generating your license.\nError message: <%= input[:fetch_license_failure_error_msg] %>\n", ["Try again", "Skip"]]
    prompt_type: "select"
    paths: [pre_license_generation, skipped]
    response_path_map:
      "Try again": pre_license_generation
      "Skip": skipped

  exit:
    messages: "Thank you."
